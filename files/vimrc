"""""""""""""""""""""""
" File:   .vimrc
" Author: Adam Batten
" Year:   2018
"""""""""""""""""""""""

" Don't be compatible with vi
set nocompatible

" Turn on syntax highlighting
syntax enable

"""""""""""""""""""""""""""""""""""""""""""
""              PLUGINS
"""""""""""""""""""""""""""""""""""""""""""
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-scripts/indentpython.vim'
"Plugin 'davidhalter/jedi-vim'
Plugin 'ervandew/supertab'
Plugin 'vim-syntastic/syntastic'
Plugin 'itchyny/lightline.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'itchyny/vim-gitbranch'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'terryma/vim-multiple-cursors'
"Plugin 'klen/python-mode'

call vundle#end()
filetype plugin indent on

"""""""""""""""""""""""""""""""""""""""""""
""          PLUGIN CONFIGURATION
"""""""""""""""""""""""""""""""""""""""""""

let g:SuperTabDefaultCompletionType = "contex"

"  Syntastic Configuration
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open= 0
let g:syntastic_check_on_wq = 0

" Use for lightline package (pretty status bar)
set laststatus=2                   " Show the status bar
let g:lightline = {
      \ 'colorscheme': 'wombat',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head'
      \ },
      \ }

let hostname = substitute(system('hostname'), '\n', '', '')
if hostname == "katara"
    let g:kite_tab_complete=1

endif
"""""""""""""""""""""""""""""""""""""""""""
""              KEY MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""
" Split Navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"  No Arrow Keys
"no <down> <Nop>
"no <left> <Nop>
"no <right> <Nop>
"no <up> <Nop>

"  Open NERDTree with Ctrl + o
map <C-o> :NERDTreeToggle<CR>

" Delete all white space with Ctrl + w + s
map <C-p> :%s/\s\+$//g
"Enable folding with the spacebar
nnoremap <space> za

" Enable Code Folding
set foldmethod=indent
set foldlevel=99

"""""""""""""""""""""""""""""""""""""""""""
""              GENERAL
"""""""""""""""""""""""""""""""""""""""""""

" Set how many lines for VIM to remember
set history=500

"""""""""""""""""""""""
" COLOURS
"""""""""""""""""""""""
syntax enable                      " Enable syntax highlighting
colorscheme monokai                " Use monokai colourscheme

""""""""""""""""""""""
" USER INTERFACE
""""""""""""""""""""""

" TAB Settings
set expandtab                      " Tabs ARE spaces
"set tabstop=4                      " Display the tabs as this many spaces
set softtabstop=4                  " The number of spaces a TAB is when editing
set shiftwidth=4
set autoindent
set smartindent

" Display Settings
set ruler                          " Always show position
set showcmd                        " Show incomplete commands
set number                         " Line numbers
set colorcolumn=72,80
"let &colorcolumn=join(range(72,79),",")
"highlight ColorColumn ctermbg=33 ctermbg=43
"let &colorcolumn=join(range(80,999),",")
"highlight ColorColumn ctermbg=43


set title

" Make things easier
set backspace=indent,eol,start     " Backspace works like you would expect
set mouse=a                        " Enable mouse

" Disable Sound Errors
set vb
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Use , for custom commands
let mapleader = ","

" Useful mappings for managing tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
map <leader>t<leader> :tabnext

"""""""""""""""""""""""""""""""""""""""""""
""              SPELL CHECKING
"""""""""""""""""""""""""""""""""""""""""""
map <leader>sc :setlocal spell!<cr>

set spelllang=en
set spellfile=~/dotfiles/.vim/spell/en.utf-8.add

" Return to last edit position when opening files (You want this!)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif


"""""""""""""""""""""""""""""""""""""""""""
""              FUNCTIONS
"""""""""""""""""""""""""""""""""""""""""""
"
"
set relativenumber
" Use ToggleNumber to toggle between number and relativenumber
function! ToggleNumber()
    if(&relativenumber == 1)
        set norelativenumber
        set number
    else
        set relativenumber
    endif
endfunc
